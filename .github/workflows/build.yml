---
name: Build
'on':
  pull_request:
    types:
    - opened
    - edited
    - reopened
    - synchronize
  push:
  release:
    types:
    - created
env:
  RUBY-BUNDLER-CACHE: 'false'
  RUBY-VERSION: 3.2.2
  XCODE-VERSION: 14.2
jobs:
  variables:
    name: Prepare Variables
    runs-on: ubuntu-22.04
    outputs:
      BUILD_NAME: "${{steps.variables.outputs.BUILD_NAME}}"
      BUILD_VERSION: "${{steps.variables.outputs.BUILD_VERSION}}"
      COMMIT_MESSAGE: "${{steps.variables.outputs.COMMIT_MESSAGE}}"
      MODIFIED_GITHUB_RUN_NUMBER: "${{steps.variables.outputs.MODIFIED_GITHUB_RUN_NUMBER}}"
      DEPLOY_ON_BETA: "${{steps.variables.outputs.DEPLOY_ON_BETA}}"
      DEPLOY_ON_RC: "${{steps.variables.outputs.DEPLOY_ON_RC}}"
      DEPLOY_ON_PROD: "${{steps.variables.outputs.DEPLOY_ON_PROD}}"
      DEPLOY_MACOS: "${{steps.variables.outputs.DEPLOY_MACOS}}"
      DEPLOY_TVOS: "${{steps.variables.outputs.DEPLOY_TVOS}}"
      SKIP_LICENSES: "${{steps.variables.outputs.SKIP_LICENSES}}"
      SKIP_LINTERS: "${{steps.variables.outputs.SKIP_LINTERS}}"
      SKIP_TESTS: "${{steps.variables.outputs.SKIP_TESTS}}"
      UPDATE_PACKAGES: "${{steps.variables.outputs.UPDATE_PACKAGES}}"
      LINTERS: "${{steps.variables.outputs.LINTERS}}"
    steps:
    - name: Prepare variables
      id: variables
      uses: cloud-officer/ci-actions/variables@master
      with:
        ssh-key: "${{secrets.SSH_KEY}}"
  actionlint:
    name: Github Actions Linter
    runs-on: ubuntu-22.04
    needs:
    - variables
    if: "${{needs.variables.outputs.SKIP_LINTERS != '1' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target')}}"
    steps:
    - name: Actionlint
      id: actionlint
      uses: cloud-officer/ci-actions/linters/actionlint@master
      with:
        linters: "${{needs.variables.outputs.LINTERS}}"
        ssh-key: "${{secrets.SSH_KEY}}"
        github_token: "${{secrets.GITHUB_TOKEN}}"
  markdownlint:
    name: Markdown Linter
    runs-on: ubuntu-22.04
    needs:
    - variables
    if: "${{needs.variables.outputs.SKIP_LINTERS != '1' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target')}}"
    steps:
    - name: Markdownlint
      id: markdownlint
      uses: cloud-officer/ci-actions/linters/markdownlint@master
      with:
        linters: "${{needs.variables.outputs.LINTERS}}"
        ssh-key: "${{secrets.SSH_KEY}}"
        github_token: "${{secrets.GITHUB_TOKEN}}"
  rubocop:
    name: Ruby Linter
    runs-on: ubuntu-22.04
    needs:
    - variables
    if: "${{needs.variables.outputs.SKIP_LINTERS != '1' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target')}}"
    steps:
    - name: Rubocop
      id: rubocop
      uses: cloud-officer/ci-actions/linters/rubocop@master
      with:
        linters: "${{needs.variables.outputs.LINTERS}}"
        ssh-key: "${{secrets.SSH_KEY}}"
        github_token: "${{secrets.GITHUB_TOKEN}}"
  yamllint:
    name: YAML Linter
    runs-on: ubuntu-22.04
    needs:
    - variables
    if: "${{needs.variables.outputs.SKIP_LINTERS != '1' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target')}}"
    steps:
    - name: Yamllint
      id: yamllint
      uses: cloud-officer/ci-actions/linters/yamllint@master
      with:
        linters: "${{needs.variables.outputs.LINTERS}}"
        ssh-key: "${{secrets.SSH_KEY}}"
        github_token: "${{secrets.GITHUB_TOKEN}}"
  licenses:
    name: Licenses Check
    runs-on: ubuntu-22.04
    needs:
    - variables
    if: "${{needs.variables.outputs.SKIP_LICENSES != '1'}}"
    steps:
    - name: Licenses
      uses: cloud-officer/ci-actions/soup@master
      with:
        ssh-key: "${{secrets.SSH_KEY}}"
        github-token: "${{secrets.GITHUB_TOKEN}}"
        parameters: "--no_prompt --soup"
  ruby_unit_tests:
    name: Ruby Unit Tests
    runs-on: "${{ matrix.os }}"
    needs:
    - variables
    if: "${{needs.variables.outputs.SKIP_TESTS != '1'}}"
    strategy:
      matrix:
        os:
        - macos-12
        - ubuntu-22.04
    steps:
    - name: Setup
      id: setup
      uses: cloud-officer/ci-actions/setup@master
      if: "${{needs.variables.outputs.SKIP_LICENSES != '1' || needs.variables.outputs.SKIP_TESTS != '1'}}"
      with:
        ruby-version: "${{env.RUBY-VERSION}}"
        ruby-bundler-cache: "${{env.RUBY-BUNDLER-CACHE}}"
        xcode-version: "${{env.XCODE-VERSION}}"
    - name: Bundler
      shell: bash
      if: "${{needs.variables.outputs.SKIP_LICENSES != '1' || needs.variables.outputs.SKIP_TESTS != '1'}}"
      run: |
        bundle config unset deployment
        bundle install
    - name: RSpec
      shell: bash
      if: "${{needs.variables.outputs.SKIP_TESTS != '1'}}"
      run: |
        ./bin/soup.rb --soup
        pushd tests
        mv _composer.json composer.json
        mv _composer.lock composer.lock
        mv _package.json package.json
        mv _requirements.txt requirements.txt
        mv _yarn.lock yarn.lock
        ../bin/soup.rb
        popd

        if [ "${RUNNER_OS}" == "Linux" ]; then
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        fi

        brew update
        brew install markdownlint-cli
        markdownlint . --ignore '{**/vendor/**,**/node_modules/**,**/Libraries/**}'
