---
name: Dependencies
'on':
  schedule:
  - cron: 0 0 * * *
env:
  RUBY-BUNDLER-CACHE: 'false'
  RUBY-VERSION: 3.2.2
jobs:
  update_dependencies:
    name: Update Dependencies
    runs-on: macos-latest
    steps:
    - name: Setup
      uses: cloud-officer/ci-actions/setup@master
      with:
        ruby-version: "${{env.RUBY-VERSION}}"
        ruby-bundler-cache: "${{env.RUBY-BUNDLER-CACHE}}"
        xcode-version: "${{env.XCODE-VERSION}}"
        fetch-depth: 0
    - name: Update dependencies
      shell: bash
      run: |
        if [ -f composer.json ]; then
          composer update
        fi

        if [ -f Gemfile ]; then
          bundle update
        fi

        if [ -f requirements.in ]; then
          pip-compile --resolver=backtracking --upgrade --unsafe-package=certifi
        fi
    - name: Licenses
      uses: cloud-officer/ci-actions/soup@master
      with:
        ssh-key: "${{secrets.SSH_KEY}}"
        github-token: "${{secrets.GITHUB_TOKEN}}"
        parameters: "--no_prompt --soup"
    - name: Create Pull Request
      shell: bash
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          commit_message="Updated dependencies"

          if [ -n "${JIRA_TICKET}" ]; then
            branch_name='${{secrets.JIRA_TICKET_DEPENDENCIES}}'
          else
            branch_name="dependencies"
          fi

          if [ '${{github.repository_owner}}' = "Cloud-Officer" ]; then
            pr_title="${commit_message}"
          else
            pr_title="${branch_name} ${{secrets.JIRA_TICKET_DEPENDENCIES}}"
          fi

          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add .
          git checkout -b "${branch_name}-${{ github.run_id }}"
          git commit -m "${commit_message}"
          git push -u origin "${branch_name}-${{ github.run_id }}"
          body_file="$(mktemp)"
          cp -f .github/pull_request_template.md "${body_file}"
          sed -i '' "s/^Describe the summary.*.$/${commit_message}./g" "${body_file}"
          sed -i '' "s/$.*-XXXX/${branch_name}/g" "${body_file}"
          sed -i '' "s/[ ] Build or security update/[X] Build or security update/g" "${body_file}"
          gh pr create --title "${pr_title}" --base master --head "${branch_name}-${{ github.run_id }}" --body-file "${body_file}"
          rm -f "${body_file}"
        fi
